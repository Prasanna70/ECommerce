# Generated by Django 5.2 on 2025-06-28 09:55

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
                ('description', models.TextField(default='', max_length=1000)),
                ('image', models.ImageField(blank=True, default='', null=True, upload_to='products/')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('stock', models.PositiveIntegerField(default=0)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('purchase_date', models.DateField(default=django.utils.timezone.now)),
                ('order_id', models.CharField(default='', max_length=20, unique=True, validators=[django.core.validators.RegexValidator('^[A-Za-z0-9]{6,20}$', 'Order ID is missing or incorrect.')])),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecommerce_admin.category')),
                ('owner', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecommerce_admin.productstatus')),
            ],
        ),
        migrations.CreateModel(
            name='ProductCategoryMapping',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('category_id', models.IntegerField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerce_admin.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductManufacturerMapping',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('manufacturer_id', models.IntegerField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerce_admin.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductPictureMapping',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('picture_id', models.IntegerField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerce_admin.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductProductAttributeMapping',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('product_attribute_id', models.IntegerField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerce_admin.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('custom_label', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('review_text', models.TextField(blank=True, default='', max_length=500, null=True)),
                ('rating', models.PositiveSmallIntegerField(blank=True, default=None, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('return_reason', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('return_comment', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('shipping_address', models.TextField(blank=True, default='', null=True)),
                ('product', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='ecommerce_admin.product')),
                ('user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductSpecificationAttributeMapping',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('specification_attribute_option_id', models.IntegerField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerce_admin.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductProductTagMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_tag_id', models.IntegerField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerce_admin.product')),
            ],
            options={
                'unique_together': {('product', 'product_tag_id')},
            },
        ),
    ]
